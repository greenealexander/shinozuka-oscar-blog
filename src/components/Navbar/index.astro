---
import Search from './Search.tsx';

const { activeTitle } = Astro.props;

interface Link {
  label: string;
  path: string;
}

const links: Link[] = [
  { label: 'Blog', path: '/blog' },
  { label: 'About', path: '/about' },
]

function linkClass(label: Link['label'], active: string) {
  if (label === active) {
    return 'link link-secondary';
  }
  return 'link link-hover';
}
---
<header>
  <div class="navbar">
    <div class="navbar-start">
      <div class="dropdown">
        <label tabindex={0} class="btn btn-ghost lg:hidden">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h8m-8 6h16" /></svg>
        </label>

        <ul tabindex={0} class="menu menu-compact dropdown-content mt-2 p-2 shadow bg-[#303336] rounded-md w-52">
          {links.map(({label, path}) => (
            <li><a href={path} class='btn btn-ghost normal-case'>{label}</a></li>
          ))}
        </ul>
      </div>

      <a href='/' class="normal-case text-lg font-extrabold">Shinozuka Oscar</a>
    </div>

    <nav class="navbar-center hidden lg:flex">
      <ul class="flex justify-center gap-x-6">
        {links.map(({label, path}) => (
          <li><a href={path} class={linkClass(label, activeTitle)}>{label}</a></li>
        ))}
      </ul>  
    </nav>

    <div class="navbar-end">
      <Search client:idle />
    </div>
  </div>
</header>
